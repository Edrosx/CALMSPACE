import serial
import time
import subprocess
import os

# Configuración
puerto = "COM4"         # Reemplaza con tu puerto correcto
baudrate = 115500
tiempo_lectura = 60     # Segundos de captura de datos
archivo_salida = "data.txt"

# Conexión al Arduino
print(f"Conectando al puerto {puerto}...")
arduino = serial.Serial(puerto, baudrate, timeout=1)
time.sleep(2)  # Esperar que se reinicie la conexión

print(f"Recopilando datos durante {tiempo_lectura} segundos...")
datos = []
inicio = time.time()

while time.time() - inicio < tiempo_lectura:
    if arduino.in_waiting:
        linea = arduino.readline().decode("utf-8", errors="ignore").strip()
        if linea:
            print(linea)
            datos.append(linea)

arduino.close()

# Guardar en .txt
with open(archivo_salida, "w") as f:
    for linea in datos:
        f.write(linea + "\n")

print(f"\n✅ Datos guardados en {archivo_salida} ({len(datos)} líneas).")


# Token y datos
GITHUB_USER = "Edrosx"
GITHUB_TOKEN = "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"  # ¡No lo pongas en código compartido!
REPO = "Edrosx/CALMSPACE"
BRANCH = "main"

# URL remota con token
url = f"https://{GITHUB_USER}:{GITHUB_TOKEN}@github.com/{REPO}.git"


os.chdir("C:/Users/diego/Documents/GitHub/CALMSPACE")


# Hacer commit y push
subprocess.run([r"C:\Program Files\Git\cmd\git.exe", "add", "C:/Users/diego/Documents/GitHub/CALMSPACE"], check=True)
subprocess.run([r"C:\Program Files\Git\cmd\git.exe", "commit", "-m", "Actualizacion datos"], check=True)
subprocess.run([r"C:\Program Files\Git\cmd\git.exe", "push", "origin", BRANCH], check=True)

print(" Datos enviados correctamente a GitHub.")